#{{ ansible_managed }}
user  {{ nginx_user }};

error_log  /var/log/nginx/error.log warn;
pid        /run/nginx.pid;

{% block worker %}
worker_processes  auto;
{% endblock %}

{% block modules %}
{% if nginx_modules %}
{% for module in nginx_modules %}
load_module  {{ module }};
{% endfor %}
{% endif %}
{% endblock %}

{% block events %}
events {
    worker_connections  1024;
    multi_accept off;
}
{% endblock %}

{% if nginx_extra_conf_options %}
{{ nginx_extra_conf_options }}
{% endif %}

http {
    {% block http_begin %}{% endblock %}

{% block http_basic %}
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    server_names_hash_bucket_size 64;

    client_body_buffer_size 15m;
    client_max_body_size 30m;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent" "$http_x_forwarded_for"';
    log_format  extended  '$time_iso8601 $remote_addr $remote_user $host [$request] $body_bytes_sent $request_time $status [$http_referer] [$http_user_agent] $http_x_forwarded_for';

    access_log  /var/log/nginx/access.log main buffer=16k;

    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;

    keepalive_timeout  65;
    keepalive_requests 100;

    server_tokens off;
{% endblock %}

{% block http_gzip %}
    gzip on;
    gzip_proxied any;
    gzip_static on;
    gzip_http_version 1.0;
    gzip_disable "MSIE [1-6].(?!.*SV1)";
    gzip_vary on;
    gzip_comp_level 5;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/x-javascript
        application/json
        application/xml
        application/xml+rss
        application/xhtml+xml
        application/x-font-ttf
        application/x-font-opentype
        image/svg+xml
        image/x-icon;
    gzip_buffers 16 8k;
    gzip_min_length 1100;
{% endblock %}

{% if nginx_extra_http_options %}
    {{ nginx_extra_http_options|indent(4, False) }}
{% endif %}

    include /etc/nginx/conf.d/*.conf;

    {% block http_end %}{% endblock %}
}
